name: Dockerize  Gleaner
on:
  push:
    branches:
      - master
      - dev_docker_glcon
    tags:
      - v3.*
  release:
    types: [published]

# https://github.com/marketplace/actions/publish-docker
# https://github.com/docker/build-push-action

jobs:
  gleaner:
    name: Docker gleaner
    runs-on: ubuntu-latest

    strategy:
      matrix:
        - goarch: amd64
          goos: "linux"
          platform: linux/amd64
        - goarch: arm64
          goos: "linux"
          platform: linux/arm64

          # above is explict build lists, otherwise we get amd64 on linux/arm as an option

        # build and publish in parallel: linux/amd64
        #goos: [linux, windows, darwin]
        #goarch: [amd64,arm64]
#        goos: [linux]
#        goarch: [amd64, arm64]
#        platform: [linux/amd64,linux/arm64]
#        exclude:
#          - goarch: "386"
#            goos: darwin
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
      - name: checkout code
        uses: actions/checkout@v2
      - name: donwload schema
        run: curl https://schema.org/version/latest/schemaorg-current-https.jsonld --output assets/schemaorg-current-https.jsonld
      - name: donwload schema
        run: curl https://schema.org/version/latest/schemaorg-current-http.jsonld --output assets/schemaorg-current-http.jsonld

      #     - name: Run tests
      #      run: go test -v -p=1 -timeout=0 ./...
      - id: binary
        name: build
        run: |
          go build -o gleaner
        working-directory: ./cmd/gleaner
        env:
          GOOS: ${{matrix.goss}}
          GOARCH: ${{matrix.goarch}}
          CGO_ENABLED: 0
      #  deploy:
      #    needs: build
      #    name: Dockerize Gleaner
      #    runs-on: ubuntu-latest
      #    steps:
      #      - name: Checkout Repo
      #        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{matrix.goarch}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: nsfearthcube/gleaner
          flavor: |
            latest=true
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=semver,pattern={{version}}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./build/Dockerfile
          context: .
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  glcon:
    name: Docker glcon
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: "linux"
            platform: linux/amd64
          - goarch: arm64
            goos: "linux"
            platform: linux/arm64

       # above is explict build lists, otherwise we get amd64 on linux/arm as an option

            # build and publish in parallel: linux/amd64
        #goos: [linux, windows, darwin]
#        #goarch: [amd64,arm64]
#        goos: [linux]
#        goarch: [amd64, arm64]
#        platform: [linux/amd64,linux/arm64]
#        exclude:
#          - goarch: "386"
#            goos: darwin
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
      - name: checkout code
        uses: actions/checkout@v2
      - name: donwload schema
        run: curl https://schema.org/version/latest/schemaorg-current-https.jsonld --output assets/schemaorg-current-https.jsonld
      - name: donwload schema
        run: curl https://schema.org/version/latest/schemaorg-current-http.jsonld --output assets/schemaorg-current-http.jsonld

      #     - name: Run tests
      #      run: go test -v -p=1 -timeout=0 ./...
      - id: binary
        name: build
        run: |
          go build -o glcon
        working-directory: ./cmd/glcon
        env:
          GOOS: ${{matrix.goss}}
          GOARCH: ${{matrix.goarch}}
          CGO_ENABLED: 0
      #  deploy:
      #    needs: build
      #    name: Dockerize Gleaner
      #    runs-on: ubuntu-latest
      #    steps:
      #      - name: Checkout Repo
      #        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.goarch}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: nsfearthcube/glcon
          flavor: |
            latest=true
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=semver,pattern={{version}}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./build/Dockerfile_glcon
          context: .
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}